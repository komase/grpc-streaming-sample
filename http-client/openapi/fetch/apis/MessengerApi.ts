/* tslint:disable */
/* eslint-disable */
/**
 * hello/hello.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  RpcStatus,
  StreamResultOfHelloReply,
} from '../models/index';
import {
    RpcStatusFromJSON,
    RpcStatusToJSON,
    StreamResultOfHelloReplyFromJSON,
    StreamResultOfHelloReplyToJSON,
} from '../models/index';

export interface MessengerSayHelloRequest {
    name?: string;
    count?: number;
}

/**
 * 
 */
export class MessengerApi extends runtime.BaseAPI {

    /**
     */
    async messengerSayHelloRaw(requestParameters: MessengerSayHelloRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<StreamResultOfHelloReply>> {
        const queryParameters: any = {};

        if (requestParameters.name !== undefined) {
            queryParameters['name'] = requestParameters.name;
        }

        if (requestParameters.count !== undefined) {
            queryParameters['count'] = requestParameters.count;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/v1/hello`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => StreamResultOfHelloReplyFromJSON(jsonValue));
    }

    /**
     */
    async messengerSayHello(requestParameters: MessengerSayHelloRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<StreamResultOfHelloReply> {
        const response = await this.messengerSayHelloRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
